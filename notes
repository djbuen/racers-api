use ruby 2.5.3
use postman (>7.6.0)
use bundler (1.17.3)

#STEPS
1. unzip project racers.zip(example location /var/www/racers-api) or clone https://github.com/djbuen/racers-api.git 
2. update path constant for google firestore credential in .env file(line 2);
 NOTE: if you wont use my credential, you can use your own just update .env file
	export GOOGLE_APPLICATION_CREDENTIALS="/var/www/racers-api/cred2.json" - for generated key in service accounts
	export GOOGLE_CLOUD_PROJECT=xclimb-92d8c - project id
 sample:
 export GOOGLE_APPLICATION_CREDENTIALS="[PATH_WHERE_YOU_UNZIP_PROJECT]/racers-api/cred2.json" -> export GOOGLE_APPLICATION_CREDENTIALS="/var/www/racers-api/cred2.json"
3. install ruby 2.5.3
4. install bundler
5. run `bundle install` in root folder
6. run `rake db:migrate`
7. run `source .env && rails s`
# once the server is started can play endpoints via postman	
8. download postman
9. import racers.postman_collection.json
10. play around with endpoints
#NOTE: when playing around with endpoints will take some time in responding max 1.5minute
11. can navigate to https://console.firebase.google.com/u/2/project/xclimb-92d8c/database/firestore/data~2Fracers~2FaBqcaPxBAwhNlVLERdBP
#login using credentials given below
## firestore account
## username: dave.xclimb@gmail.com
## pass: xclimb2020
12. check for data being manipulated through api
13. please let me know if there are any issues dave.buenconsejo@gmail.com / telegram: 09663675297

#Test via curl client sample
# racer list
curl -X GET http://localhost:3000/racers

# add racer
curl -X POST \
  http://localhost:3000/racers \
  -H 'Accept: */*' \
  -H 'Accept-Encoding: gzip, deflate' \
  -H 'Cache-Control: no-cache' \
  -H 'Connection: keep-alive' \
  -H 'Content-Length: 46' \
  -H 'Content-Type: application/json' \
  -H 'Host: localhost:3000' \
  -H 'Postman-Token: 7c167d23-338e-4598-b5f8-1309a3249f98,1da70f3b-d4b9-431c-8959-42c318931abd' \
  -H 'User-Agent: PostmanRuntime/7.16.3' \
  -H 'cache-control: no-cache' \
  -d '{
	"first_name": "dave",
	"last_name": "san"
	}'

# update race
 curl -X PUT \
  http://localhost:3000/racers/aBqcaPxBAwhNlVLERdBP \
  -H 'Accept: */*' \
  -H 'Accept-Encoding: gzip, deflate' \
  -H 'Cache-Control: no-cache' \
  -H 'Connection: keep-alive' \
  -H 'Content-Length: 46' \
  -H 'Content-Type: application/json' \
  -H 'Host: localhost:3000' \
  -H 'Postman-Token: 060e7532-9850-4c97-9253-437151ef769e,1882c190-99d9-4c44-a5ea-78424b53bf9f' \
  -H 'User-Agent: PostmanRuntime/7.16.3' \
  -H 'cache-control: no-cache' \
  -d '{
	"first_name": "dave",
	"last_name": "son"
	}'

# delete racer
curl -X DELETE \
  http://localhost:3000/racers/St9k8POQKNZsfCK4GnvL \
  -H 'Accept: */*' \
  -H 'Accept-Encoding: gzip, deflate' \
  -H 'Cache-Control: no-cache' \
  -H 'Connection: keep-alive' \
  -H 'Content-Length: ' \
  -H 'Host: localhost:3000' \
  -H 'Postman-Token: 131ccb6d-cb7b-4ffb-9617-e7ab6c9f77a2,99cd6eb9-cd40-47bf-9e12-a8dd98e1d610' \
  -H 'User-Agent: PostmanRuntime/7.16.3' \
  -H 'cache-control: no-cache'

#Routes 
#  Prefix Verb   URI Pattern             Controller#Action
#  racers GET    /racers(.:format)       racers#index
#  POST          /racers(.:format)       racers#create
#  racer  GET    /racers/:id(.:format)   racers#show
#  PATCH         /racers/:id(.:format)   racers#update
#  PUT           /racers/:id(.:format)   racers#update
#  DELETE        /racers/:id(.:format)   racers#destroy
